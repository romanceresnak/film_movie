// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/film_text/film_text-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FilmText struct {
	//unique identifier
	FilmTextId int64 `protobuf:"varint,1,opt,name=film_text_id,json=filmTextId,proto3" json:"film_text_id,omitempty"`
	//film title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	//title description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	//Attribute about last update
	LastUpdate           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FilmText) Reset()         { *m = FilmText{} }
func (m *FilmText) String() string { return proto.CompactTextString(m) }
func (*FilmText) ProtoMessage()    {}
func (*FilmText) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{0}
}

func (m *FilmText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilmText.Unmarshal(m, b)
}
func (m *FilmText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilmText.Marshal(b, m, deterministic)
}
func (m *FilmText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilmText.Merge(m, src)
}
func (m *FilmText) XXX_Size() int {
	return xxx_messageInfo_FilmText.Size(m)
}
func (m *FilmText) XXX_DiscardUnknown() {
	xxx_messageInfo_FilmText.DiscardUnknown(m)
}

var xxx_messageInfo_FilmText proto.InternalMessageInfo

func (m *FilmText) GetFilmTextId() int64 {
	if m != nil {
		return m.FilmTextId
	}
	return 0
}

func (m *FilmText) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *FilmText) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FilmText) GetLastUpdate() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

//Request data to create new film text
type CreateRequest struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	//FilmText entity
	Country              *FilmText `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateRequest) GetCountry() *FilmText {
	if m != nil {
		return m.Country
	}
	return nil
}

//Response data of created new film text
type CreateResponse struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	//Id of created FilmText
	CountryId            int64    `protobuf:"varint,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateResponse) GetCountryId() int64 {
	if m != nil {
		return m.CountryId
	}
	return 0
}

//Request data to read FilmText by id
type ReadRequest struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	//Get film text by id
	CountryId            int64    `protobuf:"varint,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{3}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadRequest) GetCountryId() int64 {
	if m != nil {
		return m.CountryId
	}
	return 0
}

//Response data by id
type ReadResponse struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	//Film text by id
	FilmText             *FilmText `protobuf:"bytes,2,opt,name=filmText,proto3" json:"filmText,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{4}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadResponse) GetFilmText() *FilmText {
	if m != nil {
		return m.FilmText
	}
	return nil
}

//Request data to update exists film text
type UpdateRequest struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	//Film text entity
	FilmText             *FilmText `protobuf:"bytes,2,opt,name=filmText,proto3" json:"filmText,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{5}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateRequest) GetFilmText() *FilmText {
	if m != nil {
		return m.FilmText
	}
	return nil
}

//Response data of updated film text
type UpdateResponse struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have been updated
	// Equals 1 in case of successful update
	Updated              int64    `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{6}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateResponse) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

//Request to delete country by id
type DeleteRequest struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	//id of film text which we want to delete
	FilmTextId           int64    `protobuf:"varint,2,opt,name=film_text_id,json=filmTextId,proto3" json:"film_text_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{7}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteRequest) GetFilmTextId() int64 {
	if m != nil {
		return m.FilmTextId
	}
	return 0
}

//Response for delete request
type DeleteResponse struct {
	//api version
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have been deleted
	// Equals 1 in case of successful delete
	Deleted              int64    `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{8}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

//Request for reading all film text entities
type ReadAllRequest struct {
	//api version
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllRequest) Reset()         { *m = ReadAllRequest{} }
func (m *ReadAllRequest) String() string { return proto.CompactTextString(m) }
func (*ReadAllRequest) ProtoMessage()    {}
func (*ReadAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{9}
}

func (m *ReadAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllRequest.Unmarshal(m, b)
}
func (m *ReadAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllRequest.Marshal(b, m, deterministic)
}
func (m *ReadAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllRequest.Merge(m, src)
}
func (m *ReadAllRequest) XXX_Size() int {
	return xxx_messageInfo_ReadAllRequest.Size(m)
}
func (m *ReadAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllRequest proto.InternalMessageInfo

func (m *ReadAllRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//Response for read all country
type ReadAllResponse struct {
	//api version
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//all film texts
	FilmText             []*FilmText `protobuf:"bytes,2,rep,name=filmText,proto3" json:"filmText,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReadAllResponse) Reset()         { *m = ReadAllResponse{} }
func (m *ReadAllResponse) String() string { return proto.CompactTextString(m) }
func (*ReadAllResponse) ProtoMessage()    {}
func (*ReadAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_199057f29f251f02, []int{10}
}

func (m *ReadAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllResponse.Unmarshal(m, b)
}
func (m *ReadAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllResponse.Marshal(b, m, deterministic)
}
func (m *ReadAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllResponse.Merge(m, src)
}
func (m *ReadAllResponse) XXX_Size() int {
	return xxx_messageInfo_ReadAllResponse.Size(m)
}
func (m *ReadAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllResponse proto.InternalMessageInfo

func (m *ReadAllResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadAllResponse) GetFilmText() []*FilmText {
	if m != nil {
		return m.FilmText
	}
	return nil
}

func init() {
	proto.RegisterType((*FilmText)(nil), "FilmText")
	proto.RegisterType((*CreateRequest)(nil), "CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "DeleteResponse")
	proto.RegisterType((*ReadAllRequest)(nil), "ReadAllRequest")
	proto.RegisterType((*ReadAllResponse)(nil), "ReadAllResponse")
}

func init() {
	proto.RegisterFile("proto/film_text/film_text-service.proto", fileDescriptor_199057f29f251f02)
}

var fileDescriptor_199057f29f251f02 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x95, 0x74, 0xb4, 0xcb, 0x69, 0x9b, 0x4c, 0x16, 0x17, 0x51, 0x24, 0x44, 0x94, 0x09,
	0xd1, 0x4a, 0xe0, 0x4a, 0xe5, 0x0e, 0x21, 0xa4, 0x69, 0x68, 0x6c, 0xb7, 0x66, 0x5c, 0x4f, 0x59,
	0x7d, 0x3a, 0x59, 0x72, 0x9b, 0x90, 0xb8, 0x68, 0xbc, 0x0d, 0x2f, 0xc7, 0x7b, 0xa0, 0xd8, 0x71,
	0x69, 0x0c, 0x29, 0xbb, 0x8b, 0x7d, 0xfe, 0x9c, 0x7c, 0xe7, 0x3f, 0x7f, 0xe0, 0x75, 0x59, 0x15,
	0xaa, 0x58, 0xac, 0x85, 0xdc, 0xdc, 0x29, 0x7c, 0x54, 0x7f, 0x9e, 0xde, 0xd6, 0x58, 0x7d, 0x17,
	0x2b, 0xa4, 0x5a, 0x91, 0xbc, 0x7c, 0x28, 0x8a, 0x07, 0x89, 0x0b, 0x7d, 0xba, 0xdf, 0xad, 0x17,
	0x4a, 0x6c, 0xb0, 0x56, 0xf9, 0xa6, 0x34, 0x82, 0xec, 0xa7, 0x07, 0xa7, 0x57, 0x42, 0x6e, 0x6e,
	0xf1, 0x51, 0x91, 0x14, 0x26, 0xfb, 0x46, 0x77, 0x82, 0xc7, 0x5e, 0xea, 0xcd, 0x06, 0x0c, 0xd6,
	0x6d, 0xfd, 0x86, 0x93, 0xe7, 0xf0, 0x4c, 0x09, 0x25, 0x31, 0xf6, 0x53, 0x6f, 0x16, 0x30, 0x73,
	0x20, 0x29, 0x8c, 0x39, 0xd6, 0xab, 0x4a, 0x94, 0x4a, 0x14, 0xdb, 0x78, 0xa0, 0x6b, 0x87, 0x57,
	0xe4, 0x3d, 0x80, 0xcc, 0x6b, 0xf5, 0xb5, 0xe4, 0xb9, 0xc2, 0xf8, 0x24, 0xf5, 0x66, 0xe3, 0x65,
	0x42, 0x0d, 0x1c, 0xb5, 0x70, 0xf4, 0xd6, 0xc2, 0xb1, 0x03, 0x75, 0x76, 0x05, 0xd3, 0xcb, 0x0a,
	0x73, 0x85, 0x0c, 0xbf, 0xed, 0xb0, 0x56, 0xe4, 0x0c, 0x06, 0x79, 0x29, 0x34, 0x5d, 0xc0, 0x9a,
	0x47, 0x72, 0x0e, 0xa3, 0x55, 0xb1, 0xdb, 0xaa, 0xea, 0x87, 0x06, 0x1b, 0x2f, 0x03, 0x6a, 0x87,
	0x62, 0xb6, 0x92, 0x5d, 0x40, 0x68, 0xfb, 0xd4, 0x65, 0xb1, 0xad, 0xf1, 0x1f, 0x8d, 0x5e, 0x00,
	0xb4, 0xf2, 0x66, 0x7e, 0x5f, 0xcf, 0x1f, 0xb4, 0x37, 0x37, 0x3c, 0xfb, 0x08, 0x63, 0x86, 0x39,
	0xef, 0x07, 0xf9, 0xcf, 0xfb, 0x9f, 0x61, 0x62, 0xde, 0xef, 0x05, 0x78, 0x05, 0xa7, 0xd6, 0xee,
	0xbf, 0x47, 0xd9, 0x97, 0xb2, 0x6b, 0x98, 0x1a, 0x77, 0xfa, 0x51, 0x9e, 0xd8, 0xe9, 0x03, 0x84,
	0xb6, 0x53, 0x2f, 0x54, 0x0c, 0xa3, 0x9d, 0xd6, 0xd8, 0x91, 0xec, 0x31, 0xbb, 0x84, 0xe9, 0x27,
	0x94, 0x78, 0x8c, 0xc3, 0x0d, 0x95, 0xef, 0x86, 0xaa, 0x41, 0xb0, 0x4d, 0x8e, 0x21, 0x70, 0xad,
	0xd9, 0x23, 0xb4, 0xc7, 0x2c, 0x85, 0xb0, 0xf1, 0xf4, 0x42, 0x4a, 0xcb, 0x10, 0x82, 0xdf, 0x86,
	0x37, 0x60, 0xbe, 0xe0, 0xd9, 0x35, 0x44, 0x7b, 0x45, 0xfb, 0x01, 0x47, 0xe2, 0x98, 0x35, 0xe8,
	0x31, 0x6b, 0xf9, 0xcb, 0x83, 0xc8, 0x5e, 0x7f, 0x31, 0x3f, 0x1a, 0x99, 0xc3, 0xd0, 0xc4, 0x8a,
	0x84, 0xb4, 0x93, 0xd3, 0x24, 0xa2, 0x4e, 0xde, 0xce, 0xe1, 0xa4, 0x01, 0x21, 0x13, 0x7a, 0x90,
	0xa2, 0x64, 0x4a, 0x3b, 0x99, 0x98, 0xc3, 0xd0, 0x2c, 0x84, 0x84, 0xb4, 0xb3, 0xe3, 0x24, 0xa2,
	0xce, 0xa6, 0xe6, 0x30, 0x34, 0xc6, 0x91, 0x90, 0x76, 0xd6, 0x90, 0x44, 0xd4, 0x71, 0xf4, 0x0d,
	0x8c, 0x5a, 0x0f, 0x48, 0x44, 0xbb, 0x7e, 0x25, 0x67, 0xd4, 0xb1, 0xe7, 0x7e, 0xa8, 0x7f, 0xc9,
	0x77, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xb3, 0x8f, 0x08, 0x68, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FilmTextServiceClient is the client API for FilmTextService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilmTextServiceClient interface {
	//Create new film text
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	//Read film text
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	//Update film text
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	//Delete film text
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	//Read all film text
	ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error)
}

type filmTextServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFilmTextServiceClient(cc grpc.ClientConnInterface) FilmTextServiceClient {
	return &filmTextServiceClient{cc}
}

func (c *filmTextServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/FilmTextService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmTextServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/FilmTextService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmTextServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/FilmTextService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmTextServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/FilmTextService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmTextServiceClient) ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error) {
	out := new(ReadAllResponse)
	err := c.cc.Invoke(ctx, "/FilmTextService/ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilmTextServiceServer is the server API for FilmTextService service.
type FilmTextServiceServer interface {
	//Create new film text
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	//Read film text
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	//Update film text
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	//Delete film text
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	//Read all film text
	ReadAll(context.Context, *ReadAllRequest) (*ReadAllResponse, error)
}

// UnimplementedFilmTextServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFilmTextServiceServer struct {
}

func (*UnimplementedFilmTextServiceServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFilmTextServiceServer) Read(ctx context.Context, req *ReadRequest) (*ReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedFilmTextServiceServer) Update(ctx context.Context, req *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedFilmTextServiceServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedFilmTextServiceServer) ReadAll(ctx context.Context, req *ReadAllRequest) (*ReadAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAll not implemented")
}

func RegisterFilmTextServiceServer(s *grpc.Server, srv FilmTextServiceServer) {
	s.RegisterService(&_FilmTextService_serviceDesc, srv)
}

func _FilmTextService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmTextServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FilmTextService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmTextServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmTextService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmTextServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FilmTextService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmTextServiceServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmTextService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmTextServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FilmTextService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmTextServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmTextService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmTextServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FilmTextService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmTextServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmTextService_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmTextServiceServer).ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FilmTextService/ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmTextServiceServer).ReadAll(ctx, req.(*ReadAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilmTextService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FilmTextService",
	HandlerType: (*FilmTextServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _FilmTextService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _FilmTextService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _FilmTextService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FilmTextService_Delete_Handler,
		},
		{
			MethodName: "ReadAll",
			Handler:    _FilmTextService_ReadAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/film_text/film_text-service.proto",
}
