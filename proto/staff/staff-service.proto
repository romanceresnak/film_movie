syntax = "proto3";

import "google/protobuf/timestamp.proto";

message Staff{
    //unique identifier of staff
    int64 staff_id = 1;

    //first name
    string first_name = 2;

    //last name
    string last_name = 3;

    //address id of store
    string address_id = 4;

    //picture, it will be represent as blob
    string picture = 5;

    //email of the store
    string email = 6;

    //unique identifier of store
    int64 store_id = 7;

    //user is active 0 alse 1
    int64 active = 8;

    //user name
    string username = 9;

    //password of user
    string password = 10;

    //Attribute about last update
    google.protobuf.Timestamp lastUpdate = 11;
}

//Request data to create new staff
message CreateRequest{
    //api version
    string api = 1;

    //Staff entity
    Staff staff = 2;
}

//Response data of created new staff
message CreateResponse{
    //api version
    string api = 1;

    //Id of created Staff
    int64 country_id = 2;
}

//Request data to read Staff by id
message ReadRequest{
    //api version
    string api = 1;

    //Get staff by id
    int64 country_id = 2;
}

//Response data by id
message ReadResponse{
    //api version
    string api = 1;

    //Store text by id
    Staff staff_id = 2;
}

//Request data to update exists staff
message UpdateRequest{
    //api version
    string api = 1;

    //Store staff entity
    Staff staff = 2;
}

//Response data of updated staff
message UpdateResponse{
    //api version
    string api = 1;

    // Contains number of entities have been updated
    // Equals 1 in case of successful update
    int64 updated = 2;
}

//Request to delete staff by id
message DeleteRequest{
    //api version
    string api = 1;

    //id of staff which we want to delete
    int64 staff_id =2;
}

//Response for delete request
message DeleteResponse{
    //api version
    string api = 1;

    // Contains number of entities have been deleted
    // Equals 1 in case of successful delete
    int64 deleted = 2;
}

//Request for reading all staff entities
message ReadAllRequest{
    //api version
    string id = 1;
}

//Response for read all stores
message ReadAllResponse{
    //api version
    string id =1;

    //all staffs
    repeated Staff staffs = 2;
}

//Service to manage all the request
service StaffService {
    //Create new staff
    rpc Create (CreateRequest) returns (CreateResponse);

    //Read staff
    rpc Read (ReadRequest) returns (ReadResponse);

    //Update staff
    rpc Update (UpdateRequest) returns (UpdateResponse);

    //Delete staff
    rpc Delete (DeleteRequest) returns (DeleteResponse);

    //Read all staff
    rpc ReadAll (ReadAllRequest) returns (ReadAllResponse);
}